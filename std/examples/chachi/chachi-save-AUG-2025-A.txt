{
  "SIP": [
    "\n\"Starting ...\";\n\n// sip.keys = () => Object.keys( sip );\n// sop.keys = () => Object.keys( sop );\n// sip.push = function() {\n// \tsip.stack.push( sip.value );\n// \treturn sip;\n// }\n// sip.pop = function() {\n// \t   const s = sip.stack.pop();\n//     if ( s ) s = String( s ).trim();\n//     if ( s ) {\n// \t\tsip.value = s;\n//     }\n//     return sip;\t\n// }\n// sip.stack = [];\n// sip.stack.push( sip.value );\n// sip.stack.shift();\n// doc = json( sip.stack );\n// save( \"Chachi SIP Stack\", doc );\n// load( \"Chachi SIP Stack\" );\n// sip.stack;\n// sip.stack.length;\n// k = sip.cache.key( 4 );\n// sip.cache.removeItem( k );\n// keys();\n// sip.memo = sip.value;\n// sip.stack.push( sip.memo );\n// sip.memo;\n\n// sip.keys()\n// menu  = () => sip.keys();\n// files = () => joni().keys();\n// menu();\n// files.cache = localStorage;\n// files.remove = function(n) { \n//   files.cache.removeItem( files.cache.key( n ) ); \n//   return files(); \n// }\n// files.touch = function( k ) {\n//   k = ( k || TiGG() );\n//   files.cache.setItem( k, \"(pending)\" );\n//   return k;\n// }\n// files.touch();\n// files();\n// files.verbose = function() {\n//    const items = [];\n//    function add( k ) {\n//        let n = files.cache.getItem( k ).length;\n//        items.push( [ k, n ] );\n//    }\n//    const list = files();\n//    list.forEach( add );\n//    return items;\n//    return list;\n// }\n// files.verbose();\n// TiGG();\n// \"Finished!\";\n// rico.toString();\n\nsip.stack.push( sip.value );\nsip.memo = json( { SIP : [ sip.value, sip.memo, sip.stack ] } );\nsip.memo;\n\n\n\n",
    "{\n  \"SIP\": [\n    \"\\n\\\"Starting ...\\\";\\n\\n// sip.keys = () => Object.keys( sip );\\n// sop.keys = () => Object.keys( sop );\\n// sip.push = function() {\\n// \\tsip.stack.push( sip.value );\\n// \\treturn sip;\\n// }\\n// sip.pop = function() {\\n// \\t   const s = sip.stack.pop();\\n//     if ( s ) s = String( s ).trim();\\n//     if ( s ) {\\n// \\t\\tsip.value = s;\\n//     }\\n//     return sip;\\t\\n// }\\n// sip.stack = [];\\n// sip.stack.push( sip.value );\\n// sip.stack.shift();\\n// doc = json( sip.stack );\\n// save( \\\"Chachi SIP Stack\\\", doc );\\n// load( \\\"Chachi SIP Stack\\\" );\\n// sip.stack;\\n// sip.stack.length;\\n// k = sip.cache.key( 4 );\\n// sip.cache.removeItem( k );\\n// keys();\\n// sip.memo = sip.value;\\n// sip.stack.push( sip.memo );\\n// sip.memo;\\n\\n// sip.keys()\\n// menu  = () => sip.keys();\\n// files = () => joni().keys();\\n// menu();\\n// files.cache = localStorage;\\n// files.remove = function(n) { \\n//   files.cache.removeItem( files.cache.key( n ) ); \\n//   return files(); \\n// }\\n// files.touch = function( k ) {\\n//   k = ( k || TiGG() );\\n//   files.cache.setItem( k, \\\"(pending)\\\" );\\n//   return k;\\n// }\\n// files.touch();\\n// files();\\n// files.verbose = function() {\\n//    const items = [];\\n//    function add( k ) {\\n//        let n = files.cache.getItem( k ).length;\\n//        items.push( [ k, n ] );\\n//    }\\n//    const list = files();\\n//    list.forEach( add );\\n//    return items;\\n//    return list;\\n// }\\n// files.verbose();\\n// TiGG();\\n// \\\"Finished!\\\";\\n// rico.toString();\\n\\nsip.memo = json( { SIP : [ sip.value, sip.memo, sip.stack ] } );\\nsip.memo;\\n\\n\\n\\n\",\n    \"{\\n  \\\"SIP\\\": [\\n    \\\"\\\\n\\\\\\\"Starting ...\\\\\\\";\\\\n\\\\n// sip.keys = () => Object.keys( sip );\\\\n// sop.keys = () => Object.keys( sop );\\\\n// sip.push = function() {\\\\n// \\\\tsip.stack.push( sip.value );\\\\n// \\\\treturn sip;\\\\n// }\\\\n// sip.pop = function() {\\\\n// \\\\t   const s = sip.stack.pop();\\\\n//     if ( s ) s = String( s ).trim();\\\\n//     if ( s ) {\\\\n// \\\\t\\\\tsip.value = s;\\\\n//     }\\\\n//     return sip;\\\\t\\\\n// }\\\\n// sip.stack = [];\\\\n// sip.stack.push( sip.value );\\\\n// sip.stack.shift();\\\\n// doc = json( sip.stack );\\\\n// save( \\\\\\\"Chachi SIP Stack\\\\\\\", doc );\\\\n// load( \\\\\\\"Chachi SIP Stack\\\\\\\" );\\\\n// sip.stack;\\\\n// sip.stack.length;\\\\n// k = sip.cache.key( 4 );\\\\n// sip.cache.removeItem( k );\\\\n// keys();\\\\n// sip.memo = sip.value;\\\\n// sip.stack.push( sip.memo );\\\\n// sip.memo;\\\\n\\\\n// sip.keys()\\\\n// menu  = () => sip.keys();\\\\n// files = () => joni().keys();\\\\n// menu();\\\\n// files.cache = localStorage;\\\\n// files.remove = function(n) { \\\\n//   files.cache.removeItem( files.cache.key( n ) ); \\\\n//   return files(); \\\\n// }\\\\n// files.touch = function( k ) {\\\\n//   k = ( k || TiGG() );\\\\n//   files.cache.setItem( k, \\\\\\\"(pending)\\\\\\\" );\\\\n//   return k;\\\\n// }\\\\n// files.touch();\\\\n// files();\\\\n// files.verbose = function() {\\\\n//    const items = [];\\\\n//    function add( k ) {\\\\n//        let n = files.cache.getItem( k ).length;\\\\n//        items.push( [ k, n ] );\\\\n//    }\\\\n//    const list = files();\\\\n//    list.forEach( add );\\\\n//    return items;\\\\n//    return list;\\\\n// }\\\\n// files.verbose();\\\\n// TiGG();\\\\n// \\\\\\\"Finished!\\\\\\\";\\\\n\\\\nsip.memo = json( { SIP : [ sip.value, sip.memo, sip.stack ] } );\\\\nsip.memo;\\\\n\\\\n\\\\n\\\",\\n    \\\"\\\\\\\"Starting ...\\\\\\\";\\\\n\\\\nsip.keys = () => Object.keys( sip );\\\\nsop.keys = () => Object.keys( sop );\\\\n\\\\nsip.push = function() {\\\\n\\\\tsip.stack.push( sip.value );\\\\n\\\\treturn sip;\\\\n}\\\\n\\\\nsip.pop = function() {\\\\n\\\\tconst s = sip.stack.pop();\\\\n    if ( s ) s = String( s ).trim();\\\\n    if ( s ) {\\\\n\\\\t\\\\tsip.value = s;\\\\n    }\\\\n    return sip;\\\\t\\\\n}\\\\n\\\\n// sip.stack = [];\\\\n// sip.stack.push( sip.value );\\\\n// sip.stack.shift();\\\\n// doc = json( sip.stack );\\\\n// save( \\\\\\\"Chachi SIP Stack\\\\\\\", doc );\\\\n// load( \\\\\\\"Chachi SIP Stack\\\\\\\" );\\\\n// sip.stack;\\\\n// sip.stack.length;\\\\n// k = sip.cache.key( 4 );\\\\n// sip.cache.removeItem( k );\\\\n// keys();\\\\n\\\\nsip.memo = sip.value;\\\\nsip.stack.push( sip.memo );\\\\nsip.memo;\\\\n// \\\\\\\"Finished!\\\\\\\";\\\\n\\\\n\\\\n\\\",\\n    [\\n      \\\"/*\\\\n// \\\\\\\"sop.keep = \\\\\\\" + sop.keep;\\\\nfunction add( gadget ) {\\\\n\\\\tlet msg = gadget.getAttribute( 'details' );\\\\n    if ( msg && msg.length ) {\\\\n    \\\\tsop.append(  msg, \\\\\\\"\\\\\\\\nDETAILS=\\\\\\\" );\\\\n    } else if ( gadget.src ) {\\\\n\\\\t\\\\tsop.append( gadget.src, \\\\\\\"\\\\\\\\nSOURCE=\\\\\\\" );\\\\n    }\\\\n    return sop;\\\\n}\\\\nsop.clear = ( s ) => ( sop.innerText = \\\\\\\"\\\\\\\"; sop; )\\\\nsop.read = ( prefix=\\\\\\\"\\\\\\\" ) => ( prefix + sop.innerText );\\\\nsop.write = ( s, prefix=\\\\\\\"\\\\\\\" ) => ( sop.innerText = ( prefix + s ); sop; );\\\\nsop.append = function( s, prefix=\\\\\\\"\\\\\\\" ) {\\\\n    if ( s && s.length ) {\\\\n    \\\\tsop.innerText += ( prefix + s );\\\\n    }\\\\n    return sop;\\\\n}\\\\nsop.modules = function() {\\\\n   \\\\tsop.write( \\\\\\\"\\\\\\\\n[Chachi Modules]\\\\\\\" );\\\\n   \\\\tconst q = \\\\\\\"script\\\\\\\";\\\\n\\\\tconst list = Array.from( document.querySelectorAll( q ) );\\\\n    list.forEach( add );\\\\n\\\\treturn sop.read();\\\\n}\\\\n// sop.modules();\\\\nsip.value;\\\\n*/\\\\n\\\\n// sip.stack = [];\\\\nsip.stack.push( sip.value );\\\\nsip.stack\\\\n// doc = json( sip.stack );\\\\n// save( \\\\\\\"Chachi SIP Stack\\\\\\\", doc );\\\\n// \\\\\\\"OK\\\\\\\";\\\\n// k = sip.cache.key( 4 );\\\\n// sip.cache.removeItem( k );\\\\n// keys();\\\\n\\\\n\\\",\\n      \\\"\\\\\\\"Starting ...\\\\\\\";\\\\n\\\\n// sip.stack = [];\\\\nsip.stack.push( sip.value );\\\\n// sip.stack.shift();\\\\n// doc = json( sip.stack );\\\\n// save( \\\\\\\"Chachi SIP Stack\\\\\\\", doc );\\\\nsip.stack\\\\n// k = sip.cache.key( 4 );\\\\n// sip.cache.removeItem( k );\\\\n// keys();\\\\n\\\\n// \\\\\\\"Finished!\\\\\\\";\\\\n\\\\n\\\\n\\\",\\n      \\\"\\\\\\\"Starting ...\\\\\\\";\\\\n\\\\n// sip.stack = [];\\\\nsip.stack.push( sip.value );\\\\n// sip.stack.shift();\\\\ndoc = json( sip.stack );\\\\nsave( \\\\\\\"Chachi SIP Stack\\\\\\\", doc );\\\\n// load( \\\\\\\"Chachi SIP Stack\\\\\\\" );\\\\nsip.stack\\\\n// sip.stack.length;\\\\n// k = sip.cache.key( 4 );\\\\n// sip.cache.removeItem( k );\\\\n// keys();\\\\n\\\\n// \\\\\\\"Finished!\\\\\\\";\\\\n\\\\n\\\\n\\\",\\n      \\\"\\\\\\\"Starting ...\\\\\\\";\\\\n\\\\nsip.keys = () => Object.keys( sip );\\\\nsop.keys = () => Object.keys( sop );\\\\n\\\\nsip.push = function() {\\\\n\\\\tsip.stack.push( sip.value );\\\\n\\\\treturn sip;\\\\n}\\\\n\\\\nsip.pop = function() {\\\\n\\\\tconst s = sip.stack.pop();\\\\n    if ( s ) s = String( s ).trim();\\\\n    if ( s ) {\\\\n\\\\t\\\\tsip.value = s;\\\\n    }\\\\n    return sip;\\\\t\\\\n}\\\\n\\\\n// sip.stack = [];\\\\n// sip.stack.push( sip.value );\\\\n// sip.stack.shift();\\\\n// doc = json( sip.stack );\\\\n// save( \\\\\\\"Chachi SIP Stack\\\\\\\", doc );\\\\n// load( \\\\\\\"Chachi SIP Stack\\\\\\\" );\\\\n// sip.stack;\\\\n// sip.stack.length;\\\\n// k = sip.cache.key( 4 );\\\\n// sip.cache.removeItem( k );\\\\n// keys();\\\\n\\\\nsip.memo = sip.value;\\\\nsip.stack.push( sip.memo );\\\\nsip.memo;\\\\n// \\\\\\\"Finished!\\\\\\\";\\\\n\\\\n\\\\n\\\"\\n    ]\\n  ]\\n}\",\n    [\n      \"/*\\n// \\\"sop.keep = \\\" + sop.keep;\\nfunction add( gadget ) {\\n\\tlet msg = gadget.getAttribute( 'details' );\\n    if ( msg && msg.length ) {\\n    \\tsop.append(  msg, \\\"\\\\nDETAILS=\\\" );\\n    } else if ( gadget.src ) {\\n\\t\\tsop.append( gadget.src, \\\"\\\\nSOURCE=\\\" );\\n    }\\n    return sop;\\n}\\nsop.clear = ( s ) => ( sop.innerText = \\\"\\\"; sop; )\\nsop.read = ( prefix=\\\"\\\" ) => ( prefix + sop.innerText );\\nsop.write = ( s, prefix=\\\"\\\" ) => ( sop.innerText = ( prefix + s ); sop; );\\nsop.append = function( s, prefix=\\\"\\\" ) {\\n    if ( s && s.length ) {\\n    \\tsop.innerText += ( prefix + s );\\n    }\\n    return sop;\\n}\\nsop.modules = function() {\\n   \\tsop.write( \\\"\\\\n[Chachi Modules]\\\" );\\n   \\tconst q = \\\"script\\\";\\n\\tconst list = Array.from( document.querySelectorAll( q ) );\\n    list.forEach( add );\\n\\treturn sop.read();\\n}\\n// sop.modules();\\nsip.value;\\n*/\\n\\n// sip.stack = [];\\nsip.stack.push( sip.value );\\nsip.stack\\n// doc = json( sip.stack );\\n// save( \\\"Chachi SIP Stack\\\", doc );\\n// \\\"OK\\\";\\n// k = sip.cache.key( 4 );\\n// sip.cache.removeItem( k );\\n// keys();\\n\\n\",\n      \"\\\"Starting ...\\\";\\n\\n// sip.stack = [];\\nsip.stack.push( sip.value );\\n// sip.stack.shift();\\n// doc = json( sip.stack );\\n// save( \\\"Chachi SIP Stack\\\", doc );\\nsip.stack\\n// k = sip.cache.key( 4 );\\n// sip.cache.removeItem( k );\\n// keys();\\n\\n// \\\"Finished!\\\";\\n\\n\\n\",\n      \"\\\"Starting ...\\\";\\n\\n// sip.stack = [];\\nsip.stack.push( sip.value );\\n// sip.stack.shift();\\ndoc = json( sip.stack );\\nsave( \\\"Chachi SIP Stack\\\", doc );\\n// load( \\\"Chachi SIP Stack\\\" );\\nsip.stack\\n// sip.stack.length;\\n// k = sip.cache.key( 4 );\\n// sip.cache.removeItem( k );\\n// keys();\\n\\n// \\\"Finished!\\\";\\n\\n\\n\",\n      \"\\\"Starting ...\\\";\\n\\nsip.keys = () => Object.keys( sip );\\nsop.keys = () => Object.keys( sop );\\n\\nsip.push = function() {\\n\\tsip.stack.push( sip.value );\\n\\treturn sip;\\n}\\n\\nsip.pop = function() {\\n\\tconst s = sip.stack.pop();\\n    if ( s ) s = String( s ).trim();\\n    if ( s ) {\\n\\t\\tsip.value = s;\\n    }\\n    return sip;\\t\\n}\\n\\n// sip.stack = [];\\n// sip.stack.push( sip.value );\\n// sip.stack.shift();\\n// doc = json( sip.stack );\\n// save( \\\"Chachi SIP Stack\\\", doc );\\n// load( \\\"Chachi SIP Stack\\\" );\\n// sip.stack;\\n// sip.stack.length;\\n// k = sip.cache.key( 4 );\\n// sip.cache.removeItem( k );\\n// keys();\\n\\nsip.memo = sip.value;\\nsip.stack.push( sip.memo );\\nsip.memo;\\n// \\\"Finished!\\\";\\n\\n\\n\"\n    ]\n  ]\n}",
    [
      "/*\n// \"sop.keep = \" + sop.keep;\nfunction add( gadget ) {\n\tlet msg = gadget.getAttribute( 'details' );\n    if ( msg && msg.length ) {\n    \tsop.append(  msg, \"\\nDETAILS=\" );\n    } else if ( gadget.src ) {\n\t\tsop.append( gadget.src, \"\\nSOURCE=\" );\n    }\n    return sop;\n}\nsop.clear = ( s ) => ( sop.innerText = \"\"; sop; )\nsop.read = ( prefix=\"\" ) => ( prefix + sop.innerText );\nsop.write = ( s, prefix=\"\" ) => ( sop.innerText = ( prefix + s ); sop; );\nsop.append = function( s, prefix=\"\" ) {\n    if ( s && s.length ) {\n    \tsop.innerText += ( prefix + s );\n    }\n    return sop;\n}\nsop.modules = function() {\n   \tsop.write( \"\\n[Chachi Modules]\" );\n   \tconst q = \"script\";\n\tconst list = Array.from( document.querySelectorAll( q ) );\n    list.forEach( add );\n\treturn sop.read();\n}\n// sop.modules();\nsip.value;\n*/\n\n// sip.stack = [];\nsip.stack.push( sip.value );\nsip.stack\n// doc = json( sip.stack );\n// save( \"Chachi SIP Stack\", doc );\n// \"OK\";\n// k = sip.cache.key( 4 );\n// sip.cache.removeItem( k );\n// keys();\n\n",
      "\"Starting ...\";\n\n// sip.stack = [];\nsip.stack.push( sip.value );\n// sip.stack.shift();\n// doc = json( sip.stack );\n// save( \"Chachi SIP Stack\", doc );\nsip.stack\n// k = sip.cache.key( 4 );\n// sip.cache.removeItem( k );\n// keys();\n\n// \"Finished!\";\n\n\n",
      "\"Starting ...\";\n\n// sip.stack = [];\nsip.stack.push( sip.value );\n// sip.stack.shift();\ndoc = json( sip.stack );\nsave( \"Chachi SIP Stack\", doc );\n// load( \"Chachi SIP Stack\" );\nsip.stack\n// sip.stack.length;\n// k = sip.cache.key( 4 );\n// sip.cache.removeItem( k );\n// keys();\n\n// \"Finished!\";\n\n\n",
      "\"Starting ...\";\n\nsip.keys = () => Object.keys( sip );\nsop.keys = () => Object.keys( sop );\n\nsip.push = function() {\n\tsip.stack.push( sip.value );\n\treturn sip;\n}\n\nsip.pop = function() {\n\tconst s = sip.stack.pop();\n    if ( s ) s = String( s ).trim();\n    if ( s ) {\n\t\tsip.value = s;\n    }\n    return sip;\t\n}\n\n// sip.stack = [];\n// sip.stack.push( sip.value );\n// sip.stack.shift();\n// doc = json( sip.stack );\n// save( \"Chachi SIP Stack\", doc );\n// load( \"Chachi SIP Stack\" );\n// sip.stack;\n// sip.stack.length;\n// k = sip.cache.key( 4 );\n// sip.cache.removeItem( k );\n// keys();\n\nsip.memo = sip.value;\nsip.stack.push( sip.memo );\nsip.memo;\n// \"Finished!\";\n\n\n",
      "\n\"Starting ...\";\n\n// sip.keys = () => Object.keys( sip );\n// sop.keys = () => Object.keys( sop );\n// sip.push = function() {\n// \tsip.stack.push( sip.value );\n// \treturn sip;\n// }\n// sip.pop = function() {\n// \t   const s = sip.stack.pop();\n//     if ( s ) s = String( s ).trim();\n//     if ( s ) {\n// \t\tsip.value = s;\n//     }\n//     return sip;\t\n// }\n// sip.stack = [];\n// sip.stack.push( sip.value );\n// sip.stack.shift();\n// doc = json( sip.stack );\n// save( \"Chachi SIP Stack\", doc );\n// load( \"Chachi SIP Stack\" );\n// sip.stack;\n// sip.stack.length;\n// k = sip.cache.key( 4 );\n// sip.cache.removeItem( k );\n// keys();\n// sip.memo = sip.value;\n// sip.stack.push( sip.memo );\n// sip.memo;\n\n// sip.keys()\n// menu  = () => sip.keys();\n// files = () => joni().keys();\n// menu();\n// files.cache = localStorage;\n// files.remove = function(n) { \n//   files.cache.removeItem( files.cache.key( n ) ); \n//   return files(); \n// }\n// files.touch = function( k ) {\n//   k = ( k || TiGG() );\n//   files.cache.setItem( k, \"(pending)\" );\n//   return k;\n// }\n// files.touch();\n// files();\n// files.verbose = function() {\n//    const items = [];\n//    function add( k ) {\n//        let n = files.cache.getItem( k ).length;\n//        items.push( [ k, n ] );\n//    }\n//    const list = files();\n//    list.forEach( add );\n//    return items;\n//    return list;\n// }\n// files.verbose();\n// TiGG();\n// \"Finished!\";\n// rico.toString();\n\nsip.stack.push( sip.value );\nsip.memo = json( { SIP : [ sip.value, sip.memo, sip.stack ] } );\nsip.memo;\n\n\n\n"
    ]
  ]
}