[
  "/*\n// \"sop.keep = \" + sop.keep;\nfunction add( gadget ) {\n\tlet msg = gadget.getAttribute( 'details' );\n    if ( msg && msg.length ) {\n    \tsop.append(  msg, \"\\nDETAILS=\" );\n    } else if ( gadget.src ) {\n\t\tsop.append( gadget.src, \"\\nSOURCE=\" );\n    }\n    return sop;\n}\nsop.clear = ( s ) => ( sop.innerText = \"\"; sop; )\nsop.read = ( prefix=\"\" ) => ( prefix + sop.innerText );\nsop.write = ( s, prefix=\"\" ) => ( sop.innerText = ( prefix + s ); sop; );\nsop.append = function( s, prefix=\"\" ) {\n    if ( s && s.length ) {\n    \tsop.innerText += ( prefix + s );\n    }\n    return sop;\n}\nsop.modules = function() {\n   \tsop.write( \"\\n[Chachi Modules]\" );\n   \tconst q = \"script\";\n\tconst list = Array.from( document.querySelectorAll( q ) );\n    list.forEach( add );\n\treturn sop.read();\n}\n// sop.modules();\nsip.value;\n*/\n\n// sip.stack = [];\nsip.stack.push( sip.value );\nsip.stack\n// doc = json( sip.stack );\n// save( \"Chachi SIP Stack\", doc );\n// \"OK\";\n// k = sip.cache.key( 4 );\n// sip.cache.removeItem( k );\n// keys();\n\n",
  "\"Starting ...\";\n\n// sip.stack = [];\nsip.stack.push( sip.value );\n// sip.stack.shift();\n// doc = json( sip.stack );\n// save( \"Chachi SIP Stack\", doc );\nsip.stack\n// k = sip.cache.key( 4 );\n// sip.cache.removeItem( k );\n// keys();\n\n// \"Finished!\";\n\n\n",
  "\"Starting ...\";\n\n// sip.stack = [];\nsip.stack.push( sip.value );\n// sip.stack.shift();\ndoc = json( sip.stack );\nsave( \"Chachi SIP Stack\", doc );\n// load( \"Chachi SIP Stack\" );\nsip.stack\n// sip.stack.length;\n// k = sip.cache.key( 4 );\n// sip.cache.removeItem( k );\n// keys();\n\n// \"Finished!\";\n\n\n",
  "/*\n\n     Chachi's Decals !!!\n(borrowed from Decal Picks)\n\n🔒 🔏 🔓 🔐 🔑 📤 📥 💠 🔳 📨 📱 📲 🔄 ⤵️ ⤴️ ➡️ 🌊\n\n🕓 🌞 🌔 ⏱️ 🎲 🖋️ ➖ ➕ 📋 ✂️ 🧴\n\n❇️ 🆘 ❔ 💢 🚫 💡 🟢 🟡 🔴 ⛔ 🏁 🚩 🔥 ❤️\n\n🖥️ 🛰️ 💫 🧭 💦 🎈 ↱ ⚡ 🗃️ 🗄️ 📦  🏠 🚀 🛸 🎡 🎉 🌪️\n\n🆔 🧷 🔰 💄 🧳 🛍️ 🏧 🛠️ 🔩 ⚙️ 🗜️ 🛡️\n\n🔲 📘 📔 📚 📜 📈 Ⓜ️ 🎨 🗺️ 💎\n\n🎠 🦜 🐈 🐅 🐰 🦝 🐱 🦉\n\n👩‍🦰 🤓 😜 😎 👨‍🌾 🧙‍♂️ 🧝 🧑‍🏫 👮 🤺 🧔 \n\n☕ 🌋 🚔 🎦 🎞️ 🤖 🎰\n\n*/\n\nsip.stack.push( sip.memo = sip.value );\nsip.stack;\n",
  "\n// sip.stack.push( sip.memo = sip.value );\n// sip.stack;\n// keys();\n// tmp = sip.stack;\n// tmp.key = keys()[15];\n// sip.stack = JSON.parse( load( tmp.key ) );\n// tmp.forEach( o => sip.stack.push( o ) );\n// sip.stack;\n// save( tmp.key, json( sip.stack ) );\n// keys();\n// load( tmp.key );\n// tmp.length = 0;\n// tmp = [];\n// tmp.key = keys()[ 1 ].slice( 0, -5 ) + \"13.md\";\n// rico( json( sip.cache ), tmp.key );\n/*\na = (3/4)*(Math.PI)*(7*7);\nb = (14*14)/8;\nc = (14*14) - (a+b);\nz = { a, b, c };\n*/\n\nsip.stack = sip.stack || [];\nsip.stack.push( sip.memo = sip.value );\nsip.stack[ sip.stack.length - 1 ];\n"
]