[
  "/* New Resources */\n\n/* \n\nMATH GROUPS:\n   + Math Artists\n   @ https://www.facebook.com/groups/313919979559265/\n\nTO-DO LIST (Primary):\n   + Chachi Omega (Vortex)\n   @ http://dave-omega/vortex/Chippy/Chachi/To-Do.html\n\nOFFICIAL HOME PAGE:\n   + Chachi Official (Morpheus)\n   @ https://nyteowldave.github.io/chachi/chachi.html\n\nGOOGLE SITE:\n   + Chachi Google Site\n   @ https://sites.google.com/view/chachi-calculator/home\n\nNEW WHITEBOARD (Not Part of Mathedesic Anymore)\n   + Chachi Whiteboard\n   @ cee00952-f1c2-4c24-814f-622ab833b81d \n\n*/\n\nsip.memo = sip.value;\nsip.push();\nsip.stack;\n\nsip.stack.length;\n",
  "/* New Resources */\n\n/* \n\nMATH GROUPS:\n   + Math Artists\n   @ https://www.facebook.com/groups/313919979559265/\n\nTO-DO LIST (Primary):\n   + Chachi Omega (Vortex)\n   @ http://dave-omega/vortex/Chippy/Chachi/To-Do.html\n\nOFFICIAL HOME PAGE:\n   + Chachi Official (Morpheus)\n   @ https://nyteowldave.github.io/chachi/chachi.html\n\nGOOGLE SITE:\n   + Chachi Google Site\n   @ https://sites.google.com/view/chachi-calculator/home\n\nNEW WHITEBOARD (Not Part of Mathedesic Anymore)\n   + Chachi Whiteboard\n   @ cee00952-f1c2-4c24-814f-622ab833b81d \n\n*/\n\nfunction tuck() {\n  sip.memo = sip.value;\n  sip.push();\n  sip.stack;\n  return sip.stack.length;\n}\n\ntuck();\n\n",
  "/* New Resources */\n\n/* \n\nMATH GROUPS:\n   + Math Artists\n   @ https://www.facebook.com/groups/313919979559265/\n\nTO-DO LIST (Primary):\n   + Chachi Omega (Vortex)\n   @ http://dave-omega/vortex/Chippy/Chachi/To-Do.html\n\nOFFICIAL HOME PAGE:\n   + Chachi Official (Morpheus)\n   @ https://nyteowldave.github.io/chachi/chachi.html\n\nGOOGLE SITE:\n   + Chachi Google Site\n   @ https://sites.google.com/view/chachi-calculator/home\n\nNEW WHITEBOARD (Not Part of Mathedesic Anymore)\n   + Chachi Whiteboard\n   @ cee00952-f1c2-4c24-814f-622ab833b81d \n\n*/\n\nfunction tuck() {\n  sip.memo = sip.value;\n  sip.push();\n  sip.stack;\n  return sip.stack.length;\n}\n\ntuck();\n\nkeys();\n",
  "/* New Resources */\n\n/* \n\nMATH GROUPS:\n   + Math Artists\n   @ https://www.facebook.com/groups/313919979559265/\n\nTO-DO LIST (Primary):\n   + Chachi Omega (Vortex)\n   @ http://dave-omega/vortex/Chippy/Chachi/To-Do.html\n\nOFFICIAL HOME PAGE:\n   + Chachi Official (Morpheus)\n   @ https://nyteowldave.github.io/chachi/chachi.html\n\nGOOGLE SITE:\n   + Chachi Google Site\n   @ https://sites.google.com/view/chachi-calculator/home\n\nNEW WHITEBOARD (Not Part of Mathedesic Anymore)\n   + Chachi Whiteboard\n   @ cee00952-f1c2-4c24-814f-622ab833b81d \n\n*/\n\ndocument.body.setAttribute( 'spellcheck', 'false' );\n\nfunction tuck() {\n  sip.memo = sip.value;\n  sip.push();\n  sip.stack;\n  return sip.stack.length;\n}\n\nfunction forever() {\n   f = \"chachi-stack-AUG-15.json\";\n   rico( json( sip.stack ), f );\n}\n\ntuck();\nforever();\nsip.stack;\n\n\nkeys();\n",
  "/* ==> Chachi Helpers <== */\n/* nyteowldave.github.io  */\n\n// Quick-n-Dirty Stack / Memo Update\nfunction tuck() {\n   sip.memo = sip.value;\n   sip.stack = ( sip.stack || [] );\n   sip.stack.push( sip.memo );\n   return sip.stack.length;\n}\n\n// Like Tuck, but More Flexible\nfunction submit( result ) {\n   sip.memo = sip.value;\n   sip.stack = ( sip.stack || [] );\n   sip.stack.push( sip.memo );\n   if ( \"string\" === typeof result ) {\n        return result;\n   }\n   return sip.stack;\n}\n\n// Quick-n-Dirty Stack Download\nfunction foreverStack( filename /* optional */ ) {\n   f = ( filename || \"chachi-stack.json\" );\n   rico( json( sip.stack ), f );\n   console.log( \"Downloaded\", filename );\n}\n\n// Da Woiks ~ Backup Everything Imaginable\nfunction backup( /* all state */ ) {\n\tconst memo    = sip.memo;\n\tconst value   = sip.value;\n\tconst stack   = sip.stack;\n\tconst tikey   = TiGG();\n\tconst tidate  = \"2025-AUG-15\"; // Doesn't TiGG format these now?\n\tconst author  = \"NyteOwlDave\"; // ^^^ Which Version ? ^^^\n\tconst subject = location.href;\n\tconst filename = location.hostname + \"-\" + tidate + \".json\";\n\tconst payload = { \n\t\theading : { author, subject, filename } ,\n\t\ttigg    : { tikey, tidate } ,\n\t\tsip     : { memo, value, stack }\n\t};\n\tconst json = JSON.stringify( payload, null, 2 );\n    rico( json, filename );\n\treturn ( \"Backup Complete : \" + filename );\n}\n\ntuck();\n\nsave( \"Chachi Helpers\", sip.value );\nkeys();\n",
  "/* ==> Chachi Helpers <== */\n/* nyteowldave.github.io  */\n\n// Spellcheck ON/OFF\nfunction spellcheck( enabled=false ) {\n\tenabled = (!! enabled).toString();\n\tdocument.body.setAttribute( 'spellcheck', enabled );\n  return document.body.getAttribute( 'spellcheck' );\n}\n\n// Set Tab Size\nfunction tabSize( spaces=2 ) {\n\treturn sip.style.tabSize = ( parseInt( spaces ) || 2 );\n}\n\n// Quick-n-Dirty Stack / Memo Update\nfunction tuck() {\n   sip.memo = sip.value;\n   sip.stack = ( sip.stack || [] );\n   sip.stack.push( sip.memo );\n   return sip.stack.length;\n}\n\n// Like Tuck, but More Flexible\nfunction submit( result ) {\n   sip.memo = sip.value;\n   sip.stack = ( sip.stack || [] );\n   sip.stack.push( sip.memo );\n   if ( \"string\" === typeof result ) {\n        return result;\n   }\n   return sip.stack;\n}\n\n// Quick-n-Dirty Cache Download\nfunction foreverCache() {\n  doc = json( localStorage );\n \tfilename = [ \n\t\tlocation.hostname , \"cache\" , \n    \"2025-AUG-15.json\" , \n  ].join( \"-\" );\n  rico( doc, filename );\n}\n\n// Quick-n-Dirty Stack Download\nfunction foreverStack( filename /* optional */ ) {\n   f = ( filename || \"chachi-stack.json\" );\n   rico( json( sip.stack ), f );\n   console.log( \"Downloaded\", filename );\n}\n\n// Da Woiks ~ Backup Everything Imaginable\nfunction backup( /* all state */ ) {\n\tconst memo    = sip.memo;\n\tconst value   = sip.value;\n\tconst stack   = sip.stack;\n\tconst tikey   = TiGG();\n\tconst tidate  = \"2025-AUG-15\"; // Doesn't TiGG format these now?\n\tconst author  = \"NyteOwlDave\"; // ^^^ Which Version ? ^^^\n\tconst subject = location.href;\n\tconst filename = location.hostname + \"-\" + tidate + \".json\";\n\tconst payload = { \n\t\theading : { author, subject, filename } ,\n\t\ttigg    : { tikey, tidate } ,\n\t\tsip     : { memo, value, stack }\n\t};\n\tconst json = JSON.stringify( payload, null, 2 );\n    rico( json, filename );\n\treturn ( \"Backup Complete : \" + filename );\n}\n\n\nhelpersDoc = ` \nChachi Helpers:\n\n// Spellcheck ON/OFF\nspellcheck( enabled )\n\n// Set Tab Size\ntabSize( spaces )\n\n// Quick-n-Dirty Stack / Memo Update\ntuck( void )\n\n// Like Tuck, but More Flexible\nsubmit( result /* optional */ )\n\n// Quick-n-Dirty Stack Download\nforeverStack( filename /* optional */ )\n\n// Quick-n-Dirty Cache Download\nforeverCache( void )\n\n// Da Woiks ~ Backup Everything Imaginable\nbackup( void )\n\n`\ntuck();\n\nsave( \"Chachi Helpers\", sip.value );\nkeys();\n\n\n\n",
  "/* ==> Chachi Helpers <== */\n/* nyteowldave.github.io  */\n\n// Spellcheck ON/OFF\nfunction spellcheck( enabled=false ) {\n\tenabled = (!! enabled).toString();\n\tdocument.body.setAttribute( 'spellcheck', enabled );\n  return document.body.getAttribute( 'spellcheck' );\n}\n\n// Set Tab Size\nfunction tabSize( spaces=2 ) {\n\treturn sip.style.tabSize = ( parseInt( spaces ) || 2 );\n}\n\n// Quick-n-Dirty Stack / Memo Update\nfunction tuck() {\n   sip.memo = sip.value;\n   sip.stack = ( sip.stack || [] );\n   sip.stack.push( sip.memo );\n   return sip.stack.length;\n}\n\n// Like Tuck, but More Flexible\nfunction submit( result ) {\n   sip.memo = sip.value;\n   sip.stack = ( sip.stack || [] );\n   sip.stack.push( sip.memo );\n   if ( \"string\" === typeof result ) {\n        return result;\n   }\n   return sip.stack;\n}\n\n// Quick-n-Dirty Cache Download\nfunction foreverCache() {\n  doc = json( localStorage );\n \tfilename = [ \n\t\tlocation.hostname , \"cache\" , \n    \"2025-AUG-15.json\" , \n  ].join( \"-\" );\n  rico( doc, filename );\n}\n\n// Quick-n-Dirty Stack Download\nfunction foreverStack( filename /* optional */ ) {\n   f = ( filename || \"chachi-stack.json\" );\n   rico( json( sip.stack ), f );\n   console.log( \"Downloaded\", filename );\n}\n\n// Da Woiks ~ Backup Everything Imaginable\nfunction backup( /* all state */ ) {\n\tconst memo    = sip.memo;\n\tconst value   = sip.value;\n\tconst stack   = sip.stack;\n\tconst tikey   = TiGG();\n\tconst tidate  = \"2025-AUG-15\"; // Doesn't TiGG format these now?\n\tconst author  = \"NyteOwlDave\"; // ^^^ Which Version ? ^^^\n\tconst subject = location.href;\n\tconst filename = location.hostname + \"-\" + tidate + \".json\";\n\tconst payload = { \n\t\theading : { author, subject, filename } ,\n\t\ttigg    : { tikey, tidate } ,\n\t\tsip     : { memo, value, stack }\n\t};\n\tconst json = JSON.stringify( payload, null, 2 );\n    rico( json, filename );\n\treturn ( \"Backup Complete : \" + filename );\n}\n\n\nhelpersDoc = ` \nChachi Helpers:\n\n// Spellcheck ON/OFF\nspellcheck( enabled )\n\n// Set Tab Size\ntabSize( spaces )\n\n// Quick-n-Dirty Stack / Memo Update\ntuck( void )\n\n// Like Tuck, but More Flexible\nsubmit( result /* optional */ )\n\n// Quick-n-Dirty Stack Download\nforeverStack( filename /* optional */ )\n\n// Quick-n-Dirty Cache Download\nforeverCache( void )\n\n// Da Woiks ~ Backup Everything Imaginable\nbackup( void )\n\n`\ntuck();\n\nsave( \"Chachi Helpers\", sip.value );\n\n// keys();\nhelpersDoc;\n\n\n",
  "/*\nbme = selma('footer menu');\nbtn = ella('button');\nbme.appendChild(btn);\nbtn.innerText=\"(pending)\";\nbme.pending = btn;\nbme.innerHTML;\n*/\n\n/*\nbtns = thelma('footer button' );\ndads = btns.map( b => b.parentElement.nodeName );\nbtns.forEach( b => { if ( b.parentElement.nodeName === \"FOOTER\" ) { b.remove(); } } );\n*/\n\n/*\nfunction onClickKeys( event ) {\n   let i = -1;\n   sop.innerText = keys().map(\n     k => ( i++, `🔑 ${i} => ${k}` ), \n   ).join( \"\\n\" )\n}\n*/\n\n// btn.innerText = \"🔐\";\n// btn.title = \"[ALT]+[K] = Cache Keys\";\n// btn.addEventListener( 'click', onClickKeys );\n// btn.outerHTML;\n\nsubmit( String(sip.stack.length) );\n\n",
  "/*\nbme = selma('footer menu');\nbtn = ella('button');\nbme.appendChild(btn);\nbtn.innerText=\"(pending)\";\nbme.pending = btn;\nbme.innerHTML;\n*/\n\n/*\nbtns = thelma('footer button' );\ndads = btns.map( b => b.parentElement.nodeName );\nbtns.forEach( b => { if ( b.parentElement.nodeName === \"FOOTER\" ) { b.remove(); } } );\n*/\n\n/*\nfunction onClickKeys( event ) {\n   let i = -1;\n   sop.innerText = keys().map(\n     k => ( i++, `🔑 ${i} => ${k}` ), \n   ).join( \"\\n\" )\n}\n*/\n\n// btn.innerText = \"🔐\";\n// btn.title = \"[ALT]+[K] = Cache Keys\";\n// btn.addEventListener( 'click', onClickKeys );\n// btn.outerHTML;\n\n// submit( String(sip.stack.length) );\ntuck();\n\n"
]